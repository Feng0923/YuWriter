{"compress":true,"commitItems":[["e12b3a3e-a989-451e-898a-8e7282bf1cc7",1515736039692,"",[[1515736011707,["Administrator@Feng",[[1,0,"Service\n===\n\n\n"]],[0,0],[14,14]]],[1515736030825,["Administrator@Feng",[[1,12,"## 创建,"]],[12,12],[18,18]]],[1515736032824,["Administrator@Feng",[[-1,17,","]],[18,18],[17,17]]],[1515736038289,["Administrator@Feng",[[1,17,",配置Service"]],[17,17],[27,27]]],[1515736039206,["Administrator@Feng",[[1,29,"\n"]],[27,27],[28,28]]],[1515736068354,["Administrator@Feng",[[1,28,"1.定义一个继承service的子类"]],[28,28],[46,46]]],[1515736069038,["Administrator@Feng",[[1,48,"\n"]],[46,46],[47,47]]],[1515736081839,["Administrator@Feng",[[1,47,"2.在AndroidManiff"]],[47,47],[63,63]]],[1515736082285,["Administrator@Feng",[[-1,62,"f"]],[63,63],[62,62]]],[1515736082567,["Administrator@Feng",[[1,62,"se"]],[62,62],[64,64]]],[1515736083279,["Administrator@Feng",[[-1,62,"se"]],[64,64],[62,62]]],[1515736096184,["Administrator@Feng",[[1,62,"est.xml文件中配置该Service"]],[62,62],[82,82]]],[1515736096902,["Administrator@Feng",[[1,84,"\n"]],[82,82],[83,83]]],[1515736108633,["Administrator@Feng",[[1,83,"//如果是在android"]],[83,83],[96,96]]],[1515736110949,["Administrator@Feng",[[-1,89,"android"]],[96,96],[89,89]]],[1515736121696,["Administrator@Feng",[[1,89,"AndroidStudio中,课"]],[89,89],[105,105]]],[1515736122743,["Administrator@Feng",[[-1,104,"课"]],[105,105],[104,104]]],[1515736131502,["Administrator@Feng",[[1,104,"可以直接new一个s"]],[104,104],[114,114]]],[1515736132366,["Administrator@Feng",[[-1,113,"s"]],[114,114],[113,113]]],[1515736134831,["Administrator@Feng",[[1,113,"SER"]],[113,113],[116,116]]],[1515736135542,["Administrator@Feng",[[-1,114,"ER"]],[116,116],[114,114]]],[1515736138392,["Administrator@Feng",[[1,114,"erivice"]],[114,114],[121,121]]],[1515736139701,["Administrator@Feng",[[-1,116,"ivice"]],[121,121],[116,116]]],[1515736151134,["Administrator@Feng",[[1,116,"vice,快速构建."]],[116,116],[126,126]]],[1515736151701,["Administrator@Feng",[[1,128,"\n"]],[126,126],[127,127]]],[1515736890025,["Administrator@Feng",[[1,127,"```\n\nimport android.app.Service\nimport android.content.Intent\nimport android.os.IBinder\nimport android.util.Log\n\nclass MyService : Service() {\n    /*\n        必须实现的方法.绑定IBinder对象,应用程序通过该对象与Service通信\n     */\n    override fun onBind(intent: Intent): IBinder? {\n        throw UnsupportedOperationException(\"Not yet implemented\")\n        Log.d(\"myService\",\"onBind\")\n    }\n\n    /*\n    * 在Service第一次被创建后立即回调该方法.\n    * */\n    override fun onCreate() {\n        super.onCreate()\n        Log.d(\"myService\",\"onCreate\")\n\n    }\n\n    /*\n    * 每次调用StartService(intent)方法是启动该Serviece并回调.\n    * */\n    override fun onStartCommand(intent: Intent?, flags: Int, startId: Int): Int {\n        return super.onStartCommand(intent, flags, startId)\n        Log.d(\"myService\",\"onStartCommand\")\n    }\n\n    /*\n    * 在Service被关闭之前回调该方法\n    * */\n    override fun onDestroy() {\n        super.onDestroy()\n        Log.d(\"myService\",\"onDestroy\")\n    }\n}\n\n```\n\n"]],[126,126],[1050,1050]]],[1515736952028,["Administrator@Feng",[[1,1051,"```\n<service android:name=\".MyService\"></service>\n```\n\n"]],[1050,1050],[1105,1105]]],[1515736956358,["Administrator@Feng",[[1,1050,"在"]],[1050,1050],[1051,1051]]],[1515736962749,["Administrator@Feng",[[1,127,"\n"]],[126,126],[127,127]]],[1515736965768,["Administrator@Feng",[[1,127,"1.创建"]],[127,127],[131,131]]],[1515736970084,["Administrator@Feng",[[-1,1055,"在"]],[1056,1056],[1055,1055]]],[1515736975246,["Administrator@Feng",[[1,1055,"2.配置.:"]],[1055,1055],[1061,1061]]],[1515736976172,["Administrator@Feng",[[-1,1059,".:"]],[1061,1061],[1059,1059]]],[1515736976728,["Administrator@Feng",[[1,1059,":"]],[1059,1059],[1060,1060]]],[1515736979006,["Administrator@Feng",[[1,131,":"]],[131,131],[132,132]]],[1515737009092,["Administrator@Feng",[[1,12,"\n"]],[11,11],[12,12]]],[1515737016748,["Administrator@Feng",[[1,12,"Android四大组建"]],[12,12],[23,23]]],[1515737018021,["Administrator@Feng",[[-1,19,"四大组建"]],[23,23],[19,19]]],[1515737034216,["Administrator@Feng",[[1,19,"四大组件之一,后台运行"]],[19,19],[30,30]]],[1515737092095,["Administrator@Feng",[[1,1135,"## 运行Service"]],[1135,1135],[1147,1147]]],[1515737093548,["Administrator@Feng",[[1,1150,"\n"]],[1147,1147],[1148,1148]]],[1515737105094,["Administrator@Feng",[[1,1148,"1.通过context."]],[1148,1148],[1160,1160]]],[1515737108092,["Administrator@Feng",[[-1,1152,"context."]],[1160,1160],[1152,1152]]],[1515737126894,["Administrator@Feng",[[1,1152,"Context.startService()方法.()"]],[1152,1152],[1179,1179]]],[1515737139088,["Administrator@Feng",[[1,1178,"与访问者没有关联,刚问这"]],[1178,1178],[1190,1190]]],[1515737140195,["Administrator@Feng",[[-1,1187,"刚问这"]],[1190,1190],[1187,1187]]],[1515737144994,["Administrator@Feng",[[1,1187,"访问者推出了"]],[1187,1187],[1193,1193]]],[1515737146308,["Administrator@Feng",[[-1,1190,"推出了"]],[1193,1193],[1190,1190]]],[1515737154479,["Administrator@Feng",[[1,1190,"退出了,Service然在"]],[1190,1190],[1203,1203]]],[1515737155984,["Administrator@Feng",[[1,1203,"运行"]],[1203,1203],[1205,1205]]],[1515737159228,["Administrator@Feng",[[1,1209,"\n"]],[1206,1206],[1207,1207]]],[1515737174905,["Administrator@Feng",[[1,1207,"2.通过Context.bindService()放啊分"]],[1207,1207],[1235,1235]]],[1515737175644,["Administrator@Feng",[[-1,1232,"放啊分"]],[1235,1235],[1232,1232]]],[1515737177693,["Administrator@Feng",[[1,1232,"方法,"]],[1232,1232],[1235,1235]]],[1515737179275,["Administrator@Feng",[[-1,1234,","]],[1235,1235],[1234,1234]]],[1515737180542,["Administrator@Feng",[[1,1234,".()"]],[1234,1234],[1237,1237]]],[1515737209863,["Administrator@Feng",[[1,1236,"访问者与service关联,访问者一旦推出"]],[1236,1236],[1257,1257]]],[1515737210708,["Administrator@Feng",[[-1,1255,"推出"]],[1257,1257],[1255,1255]]],[1515737214861,["Administrator@Feng",[[1,1255,"退出,"]],[1255,1255],[1258,1258]]],[1515737225039,["Administrator@Feng",[[1,1258,"Service也就终止."]],[1258,1258],[1270,1270]]],[1515737225436,["Administrator@Feng",[[-1,1269,"."]],[1270,1270],[1269,1269]]],[1515737226732,["Administrator@Feng",[[1,1273,"\n"]],[1270,1270],[1271,1271]]],[1515737618439,["Administrator@Feng",[[1,1271,"```\n startService(intent)//启动service\n stopService(intent)//停止service\n```\n\n```\n01-12 01:11:49.001 2737-2737/? D/myService: onCreate\n01-12 01:11:49.001 2737-2737/? D/myService: onStartCommand\n01-12 01:11:49.001 2737-2737/? D/myService: onDestroy\n```\n\n"]],[1270,1270],[1519,1519]]],[1515737750737,["Administrator@Feng",[[1,1311,"artService(intent)//启动service\n st"]],[1339,1340],[1271,1376]]],[1515737843273,["Administrator@Feng",[[1,1540,"StartCommand\n01-12 01:11:49.001 2737-2737/? D/myService: on"]],[1470,1470],[1378,1610]]],[1515737867403,["Administrator@Feng",[[1,1271,"\n"]],[1270,1270],[1271,1271]]],[1515737868052,["Administrator@Feng",[[1,1271,"1."]],[1271,1271],[1273,1273]]],[1515737870510,["Administrator@Feng",[[1,1273,"start"]],[1273,1273],[1278,1278]]],[1515737876550,["Administrator@Feng",[[1,1619,"2.bind"]],[1619,1619],[1625,1625]]],[1515737878370,["Administrator@Feng",[[1,1629,"\n"]],[1625,1625],[1626,1626]]],[1515737879362,["Administrator@Feng",[[-1,1629,"\n"]],[1626,1626],[1625,1625]]],[1515737898819,["Administrator@Feng",[[-1,1381,"```"]],[1384,1384],[1381,1381]]],[1515737899213,["Administrator@Feng",[[-1,1382,"\n"]],[1381,1381],[1380,1380]]],[1515737900891,["Administrator@Feng",[[-1,1279,"```\n startService(intent)//启动service\n startService(intent)//启动service\n stopService(intent)//停止service"]],[1279,1380],[1279,1279]]],[1515737901683,["Administrator@Feng",[[-1,1280,"\n"]],[1279,1279],[1278,1278]]],[1515737903043,["Administrator@Feng",[[-1,1279,"\n"]],[1279,1279],[1278,1278]]],[1515737904443,["Administrator@Feng",[[-1,1278,"\n"]],[1279,1279],[1278,1278]]],[1515737906643,["Administrator@Feng",[[1,1278,"\n"]],[1278,1278],[1279,1279]]],[1515737911941,["Administrator@Feng",[[1,1283," startService(intent)//启动service\n startService(intent)//启动service\n stopService(intent)//停止service\n```\n\n```\n"]],[1278,1278],[1385,1385]]],[1515737916643,["Administrator@Feng",[[-1,1385,"\n"]],[1385,1385],[1384,1384]]],[1515757596830,["Administrator@Feng",[[1,1624,":"]],[1624,1624],[1625,1625]]],[1515757599402,["Administrator@Feng",[[1,1629,"\n"]],[1625,1625],[1626,1626]]],[1515757600827,["Administrator@Feng",[[-1,1629,"\n"]],[1626,1626],[1625,1625]]],[1515757628579,["Administrator@Feng",[[1,1629,"\n"]],[1625,1625],[1626,1626]]],[1515759321940,["Administrator@Feng",[[1,1626,"```\n  bindService(intent,connection,Service.BIND_AUTO_CREATE)\n        //1.intent: Service 开启的service 2.connection: ServiceConnetion 监听访问者和Service 3.flag:Boolean 是否自动创建Service 0 则不自动创建,BIND_AUTO_CREATE自动创建\n```\n\n"]],[1625,1625],[1835,1835]]],[1515759359982,["Administrator@Feng",[[1,1835,"```\n    var binder: MyService.MyBinder? = null\n    private val connection: ServiceConnection = object : ServiceConnection{\n        /**\n         * 当Activity与Service断开连接时回调该方法\n         */\n        override fun onServiceDisconnected(name: ComponentName?) {\n            println(\"--disconnected--\")\n\n        }\n        /**\n         * 当Activity与Service连接成功时回调该方法\n         */\n        override fun onServiceConnected(name: ComponentName?, service: IBinder?) {\n            println(\"--connected--\")\n            binder = service as MyService.MyBinder? //获取service的onBind方法所返回的MyBinder对象\n        }\n    }\n```\n\n"]],[1834,1834],[2429,2429]]],[1515759425922,["Administrator@Feng",[[1,2430,"```\n    private var count: Int = 0\n    private val binder = MyBinder()\n\n    inner class MyBinder : Binder() {\n        fun getCount(): Int {\n            return count\n        }\n    }\n    /*\n        必须实现的方法.绑定IBinder对象,应用程序通过该对象与Service通信\n     */\n    override fun onBind(intent: Intent): IBinder? {\n        Log.d(\"myService\", \"onBind\")\n        return binder //返回binder对象\n    }\n```\n\n"]],[2429,2429],[2808,2808]]],[1515759432401,["Administrator@Feng",[[1,2429,"service:"]],[2429,2429],[2437,2437]]],[1515759433064,["Administrator@Feng",[[-1,2436,":"]],[2437,2437],[2436,2436]]],[1515759435210,["Administrator@Feng",[[1,2436,"里:"]],[2436,2436],[2438,2438]]],[1515759464451,["Administrator@Feng",[[1,1834,"Activvity"]],[1834,1834],[1843,1843]]],[1515759468472,["Administrator@Feng",[[-1,1834,"Activvity"]],[1834,1843],[1834,1834]]],[1515759469815,["Administrator@Feng",[[1,1835,"\n"]],[1834,1834],[1835,1835]]],[1515759473466,["Administrator@Feng",[[1,1835,"Activvity里:"]],[1835,1835],[1846,1846]]],[1515759526223,["Administrator@Feng",[[1,2825,"\n"]],[2824,2824],[2825,2825]]],[1515759527332,["Administrator@Feng",[[1,2825,"thread {\n  while (!quit) {\n        try {\n            Thread.sleep(1000)\n        } catch (e: Exception) {\n\n        }finally {\n            count++\n        }\n    }\n}"]],[2825,2825],[2987,2987]]],[1515759531536,["Administrator@Feng",[[1,2825,"\n"]],[2824,2824],[2825,2825]]],[1515759537128,["Administrator@Feng",[[-1,2826,"thread {\n  while (!quit) {\n        try {\n            Thread.sleep(1000)\n        } catch (e: Exception) {\n\n        }finally {\n            count++\n        }\n    }\n}"]],[2826,2988],[2826,2826]]],[1515759545567,["Administrator@Feng",[[1,2827,"\n"]],[2824,2824],[2825,2825]]],[1515759545792,["Administrator@Feng",[[1,2825,"private var quit: Boolean = false /* * 在Service第一次被创建后立即回调该方法. * */ override fun onCreate() {\n    super.onCreate()\n    Log.d(\"myService\", \"onCreate\")\n    thread {\n  while (!quit) {\n            try {\n                Thread.sleep(1000)\n            } catch (e: Exception) {\n\n            }finally {\n                count++\n            }\n        }\n    }"]],[2825,2825],[3173,3173]]],[1515759548511,["Administrator@Feng",[[-1,3175,"\n"]],[3175,3175],[3174,3174]]],[1515759549015,["Administrator@Feng",[[-1,3174,"\n"]],[3174,3174],[3173,3173]]],[1515759553496,["Administrator@Feng",[[1,2859,"\n"]],[2859,2859],[2860,2860]]],[1515759556320,["Administrator@Feng",[[1,2894,"\n"]],[2894,2894],[2895,2895]]],[1515759570954,["Administrator@Feng",[[1,3180,"然后在"]],[3180,3180],[3183,3183]]],[1515759574311,["Administrator@Feng",[[-1,3182,"在"]],[3183,3183],[3182,3182]]],[1515759587767,["Administrator@Feng",[[1,3182,"设置一个按钮获取service里的count值:"]],[3182,3182],[3206,3206]]],[1515759588207,["Administrator@Feng",[[1,3212,"\n"]],[3206,3206],[3207,3207]]],[1515759610254,["Administrator@Feng",[[1,3207,"```\ngetState.setOnClickListener { toast(\"service的count值:${binder?.getCount()}\") }\n\n```\n\n"]],[3206,3206],[3294,3294]]],[1515759653756,["Administrator@Feng",[[1,3295,"![Snipaste_2018-01-12_20-12-44]($res/Snipaste_2018-01-12_20-12-44.png)\n![Snipaste_2018-01-12_20-12-54]($res/Snipaste_2018-01-12_20-12-54.png)\n\n"]],[3294,3294],[3437,3437]]],[1515759677433,["Administrator@Feng",[[1,3438,"d"]],[3438,3438],[3439,3439]]],[1515759678071,["Administrator@Feng",[[-1,3438,"d"]],[3439,3439],[3438,3438]]],[1515759695513,["Administrator@Feng",[[1,3438,"当然别忘了解绑:```\n        unbindService(connection)\n\n```\n\n"]],[3438,3438],[3490,3490]]]]]]}