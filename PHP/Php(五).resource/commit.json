{"compress":true,"commitItems":[["526da63b-d7c1-4901-bd03-0cc682d4cc77",1515257461352,"",[[1515257409876,["Administrator@Feng",[[1,0,"Php(五)\n===\n\n\n"]],[0,0],[13,13]]],[1515257461030,["Administrator@Feng",[[1,6,"---"]],[6,6],[9,9]]],[1515257462343,["Administrator@Feng",[[1,9,"数组"]],[9,9],[11,11]]],[1515257474481,["Administrator@Feng",[[1,16,"# 使用数组"]],[16,16],[22,22]]],[1515257479124,["Administrator@Feng",[[1,24,"\n"]],[22,22],[23,23]]],[1515257479893,["Administrator@Feng",[[-1,24,"\n"]],[23,23],[22,22]]],[1515257481412,["Administrator@Feng",[[-1,17," 使用数组"]],[22,22],[17,17]]],[1515257485536,["Administrator@Feng",[[1,17,"# 数组的类型"]],[17,17],[24,24]]],[1515257486532,["Administrator@Feng",[[1,26,"\n"]],[24,24],[25,25]]],[1515257493400,["Administrator@Feng",[[1,25,"- 关联数组"]],[25,25],[31,31]]],[1515257494964,["Administrator@Feng",[[1,33,"\n"]],[31,31],[32,32]]],[1515257501369,["Administrator@Feng",[[1,32,"- 所引述组"]],[32,32],[38,38]]],[1515257502724,["Administrator@Feng",[[-1,34,"所引述组"]],[38,38],[34,34]]],[1515257506503,["Administrator@Feng",[[1,34,"索引数组"]],[34,34],[38,38]]],[1515257511893,["Administrator@Feng",[[1,32,"\n"]],[31,31],[32,32]]],[1515257520421,["Administrator@Feng",[[1,32,"$array = array"]],[32,32],[46,46]]],[1515257597031,["Administrator@Feng",[[1,38,"1"],[1,46,"(\"a\"=>\"foo\",\"b\"=>\"bar\");"]],[32,46],[71,71]]],[1515257603447,["Administrator@Feng",[[1,79,"$array2 = array(1=>\"foo\",2=>\"bar\");"]],[79,79],[114,114]]],[1515257621046,["Administrator@Feng",[[1,25,"\n"]],[24,24],[25,25]]],[1515257630893,["Administrator@Feng",[[1,25,"phpzhon"]],[25,25],[32,32]]],[1515257631660,["Administrator@Feng",[[-1,28,"zhon"]],[32,32],[28,28]]],[1515257663723,["Administrator@Feng",[[1,28,"中有两种类型的数组,即索引数组和关联数组.索引数组键有"]],[28,28],[55,55]]],[1515257664212,["Administrator@Feng",[[-1,54,"有"]],[55,55],[54,54]]],[1515257682838,["Administrator@Feng",[[1,54,"由数字组成,()"]],[54,54],[62,62]]],[1515257692154,["Administrator@Feng",[[1,61,"默认为索引数组"]],[61,61],[68,68]]],[1515257701953,["Administrator@Feng",[[1,69,",关联数组有"]],[69,69],[75,75]]],[1515257702764,["Administrator@Feng",[[-1,74,"有"]],[75,75],[74,74]]],[1515257706650,["Administrator@Feng",[[1,74,"由自复查un"]],[74,74],[80,80]]],[1515257708525,["Administrator@Feng",[[-1,75,"自复查un"]],[80,80],[75,75]]],[1515257716958,["Administrator@Feng",[[1,75,"字符串和数字混合组成."]],[75,75],[86,86]]],[1515257722764,["Administrator@Feng",[[1,177,"\n"]],[176,176],[177,177]]],[1515258193329,["Administrator@Feng",[[1,177,"```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\n\t输出结果:"]],[176,176],[285,285]]],[1515258225584,[null,[[-1,279,"\n"],[1,287,"\n"]],[279,279],[288,288]]],[1515258225585,[null,[[1,279,"\n"],[-1,286,"\n"]],[288,288],[279,279]]],[1515258203644,["Administrator@Feng",[[1,285,"array(3) {\r\n  [0]=>\r\n  string(4) \"foo1\"\r\n  [1]=>\r\n  string(4) \"foo2\"\r\n  [2]=>\r\n  string(4) \"foo3\"\r\n}\r\narray(4) {\r\n  [0]=>\r\n  string(1) \"a\"\r\n  [1]=>\r\n  string(1) \"b\"\r\n  [6]=>\r\n  string(1) \"c\"\r\n  [7]=>\r\n  string(1) \"d\"\r\n}"]],[285,285],[504,504]]],[1515258207840,["Administrator@Feng",[[-1,295,"\r"],[1,298,"\t"],[-1,304,"\r"],[-1,324,"\r"],[-1,333,"\r"],[-1,353,"\r"],[-1,362,"\r"],[-1,382,"\r"],[-1,385,"\r"],[-1,397,"\r"],[-1,406,"\r"],[-1,423,"\r"],[-1,432,"\r"],[-1,449,"\r"],[-1,458,"\r"],[-1,475,"\r"],[-1,484,"\r"],[-1,501,"\r"]],[297,297],[298,298]]],[1515258208572,["Administrator@Feng",[[1,307,"\t"]],[307,307],[308,308]]],[1515258209100,["Administrator@Feng",[[1,326,"\t"]],[326,326],[327,327]]],[1515258209652,["Administrator@Feng",[[1,335,"\t"]],[335,335],[336,336]]],[1515258210212,["Administrator@Feng",[[1,354,"\t"]],[354,354],[355,355]]],[1515258210796,["Administrator@Feng",[[1,364,"\t"]],[364,364],[365,365]]],[1515258211812,["Administrator@Feng",[[1,383,"\t"]],[383,383],[384,384]]],[1515258212420,["Administrator@Feng",[[1,386,"\t"]],[386,386],[387,387]]],[1515258213116,["Administrator@Feng",[[1,399,"\t"]],[399,399],[400,400]]],[1515258213676,["Administrator@Feng",[[1,409,"\t"]],[409,409],[410,410]]],[1515258214220,["Administrator@Feng",[[1,426,"\t"]],[426,426],[427,427]]],[1515258215660,["Administrator@Feng",[[1,435,"\t"]],[435,435],[436,436]]],[1515258216324,["Administrator@Feng",[[1,451,"\t"]],[451,451],[452,452]]],[1515258217204,["Administrator@Feng",[[1,460,"\t"]],[460,460],[461,461]]],[1515258217855,["Administrator@Feng",[[1,477,"\t"]],[477,477],[478,478]]],[1515258218388,["Administrator@Feng",[[1,487,"\t"]],[487,487],[488,488]]],[1515258219212,["Administrator@Feng",[[1,502,"\t"]],[502,502],[503,503]]],[1515258222786,["Administrator@Feng",[[-1,505,"\n"],[1,506,"阿斯蒂芬"]],[505,505],[509,509]]],[1515258224500,["Administrator@Feng",[[-1,506,"斯蒂芬"]],[509,509],[506,506]]],[1515258224652,["Administrator@Feng",[[-1,505,"阿"],[1,506,"\n"]],[506,506],[505,505]]],[1515258645608,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"]],[279,279],[506,506]]],[1515258645608,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"]],[506,506],[279,279]]],[1515258594349,["Administrator@Feng",[[-1,505,"\n"],[1,506,"## chuan"]],[505,505],[513,513]]],[1515258595500,["Administrator@Feng",[[-1,508,"chuan"]],[513,513],[508,508]]],[1515258598706,["Administrator@Feng",[[1,508,"创建数组"]],[508,508],[512,512]]],[1515258599718,["Administrator@Feng",[[1,512,"\n\n"]],[512,512],[513,513]]],[1515258618157,["Administrator@Feng",[[-1,513,"\n"],[1,514,"除了上节所示的,还有:"]],[513,513],[524,524]]],[1515258619199,["Administrator@Feng",[[1,524,"\n\n"]],[524,524],[525,525]]],[1515258625826,["Administrator@Feng",[[1,525,"```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n\n"]],[524,524],[684,684]]],[1515258705591,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"]],[279,279],[506,506]]],[1515258705591,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"]],[506,506],[279,279]]],[1515258704136,["Administrator@Feng",[[1,684,"还可以"]],[684,684],[687,687]]],[1515258765594,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"]],[279,279],[506,506]]],[1515258765594,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"]],[506,506],[279,279]]],[1515258707706,["Administrator@Feng",[[1,687,"是哟价格"]],[687,687],[691,691]]],[1515258709508,["Administrator@Feng",[[-1,687,"是哟价格"]],[691,691],[687,687]]],[1515258722047,["Administrator@Feng",[[1,687,"使用range()来建立一个半酣指定"]],[687,687],[705,705]]],[1515258723964,["Administrator@Feng",[[-1,701,"半酣指定"]],[705,705],[701,701]]],[1515258736592,["Administrator@Feng",[[1,701,"指定范围单元的数组:"]],[701,701],[711,711]]],[1515258737660,["Administrator@Feng",[[-1,710,":"]],[711,711],[710,710]]],[1515258739596,["Administrator@Feng",[[1,712,"\n"]],[710,710],[711,711]]],[1515258747870,["Administrator@Feng",[[1,711,"array range()"]],[711,711],[724,724]]],[1515258750909,["Administrator@Feng",[[1,723,"me"]],[723,723],[725,725]]],[1515258751541,["Administrator@Feng",[[-1,724,"e"]],[725,725],[724,724]]],[1515258752118,["Administrator@Feng",[[1,724,"xi"]],[724,724],[726,726]]],[1515258753007,["Administrator@Feng",[[-1,724,"xi"]],[726,726],[724,724]]],[1515258761485,["Administrator@Feng",[[1,724,"ixed $start,me"]],[724,724],[738,738]]],[1515258762214,["Administrator@Feng",[[-1,737,"e"]],[738,738],[737,737]]],[1515258765205,["Administrator@Feng",[[1,737,"ixed $li"]],[737,737],[745,745]]],[1515258780110,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"]],[279,279],[506,506]]],[1515258780110,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"]],[506,506],[279,279]]],[1515258768885,["Administrator@Feng",[[1,745,"mit []"]],[745,745],[751,751]]],[1515258777437,["Administrator@Feng",[[1,750,",number $step"]],[750,750],[763,763]]],[1515258779797,["Administrator@Feng",[[1,765,";"]],[765,765],[766,766]]],[1515258840113,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"]],[279,279],[506,506]]],[1515258840113,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"]],[506,506],[279,279]]],[1515258780444,["Administrator@Feng",[[1,768,"\n"]],[766,766],[767,767]]],[1515258798176,["Administrator@Feng",[[1,767,"start"]],[767,767],[772,772]]],[1515258799348,["Administrator@Feng",[[-1,768,"tart"]],[772,772],[768,768]]],[1515258807088,["Administrator@Feng",[[1,768,"tep:dan"]],[768,768],[775,775]]],[1515258808148,["Administrator@Feng",[[-1,772,"dan"]],[775,775],[772,772]]],[1515258819381,["Administrator@Feng",[[1,772,"单元之间的进步值."]],[772,772],[781,781]]],[1515258820404,["Administrator@Feng",[[-1,777,"进步值."]],[781,781],[777,777]]],[1515258827714,["Administrator@Feng",[[1,777,"步进值;"]],[777,777],[781,781]]],[1515258828364,["Administrator@Feng",[[1,783,"\n"]],[781,781],[782,782]]],[1515259440139,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"]],[279,279],[506,506]]],[1515259440139,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"]],[506,506],[279,279]]],[1515259428132,["Administrator@Feng",[[1,782,"```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\n\t"]],[781,781],[857,857]]],[1515259460583,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,858,"\n"]],[279,279],[859,859]]],[1515259460583,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,857,"\n"]],[859,859],[279,279]]],[1515259446591,["Administrator@Feng",[[1,857,"输出结果:Array\r\n(\r\n    [0] => 0\r\n    [1] => 2\r\n    [2] => 4\r\n    [3] => 6\r\n)\r\nArray\r\n(\r\n    [0] => a\r\n    [1] => b\r\n    [2] => c\r\n    [3] => d\r\n    [4] => e\r\n    [5] => f\r\n    [6] => g\r\n)"]],[857,857],[1040,1040]]],[1515259449842,["Administrator@Feng",[[-1,867,"\r"],[1,869,"\t"],[-1,870,"\r"],[-1,884,"\r"],[-1,898,"\r"],[-1,912,"\r"],[-1,926,"\r"],[-1,929,"\r"],[-1,936,"\r"],[-1,939,"\r"],[-1,953,"\r"],[-1,967,"\r"],[-1,981,"\r"],[-1,995,"\r"],[-1,1009,"\r"],[-1,1023,"\r"],[-1,1037,"\r"]],[868,868],[869,869]]],[1515259451212,["Administrator@Feng",[[1,923,"\t"]],[923,923],[924,924]]],[1515259452621,["Administrator@Feng",[[1,922,"\t"]],[922,922],[923,923]]],[1515259455150,["Administrator@Feng",[[1,927,"\t"]],[927,927],[928,928]]],[1515259456243,["Administrator@Feng",[[1,934,"\t"]],[934,934],[935,935]]],[1515259458348,["Administrator@Feng",[[1,1028,"\t"]],[1028,1028],[1029,1029]]],[1515259472119,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,857,"\t"],[-1,1030,"\t"],[1,1031,"\n"]],[279,279],[1032,1032]]],[1515259472119,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,856,"\t"],[1,1030,"\t"],[-1,1030,"\n"]],[1032,1032],[279,279]]],[1515259468100,["Administrator@Feng",[[-1,1026,"g"]],[1027,1027],[1026,1026]]],[1515259469671,["Administrator@Feng",[[1,1026,"g"]],[1026,1026],[1027,1027]]],[1515259471691,["Administrator@Feng",[[1,1033,"\n"]],[1030,1030],[1031,1031]]],[1515259763973,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,857,"\t"],[-1,1030,"\t"],[1,1031,"\n"]],[279,279],[1032,1032]]],[1515259763973,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,856,"\t"],[1,1030,"\t"],[-1,1030,"\n"]],[1032,1032],[279,279]]],[1515259762795,["Administrator@Feng",[[1,1031,"## 二维数组"]],[1031,1031],[1038,1038]]],[1515259823956,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,857,"\t"],[-1,1030,"\t"],[1,1031,"\n"]],[279,279],[1032,1032]]],[1515259823956,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,856,"\t"],[1,1030,"\t"],[-1,1030,"\n"]],[1032,1032],[279,279]]],[1515259764429,["Administrator@Feng",[[1,1041,"\n"]],[1038,1038],[1039,1039]]],[1515259968361,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,857,"\t"],[-1,1030,"\t"],[1,1031,"\n"]],[279,279],[1032,1032]]],[1515259968361,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,856,"\t"],[1,1030,"\t"],[-1,1030,"\n"]],[1032,1032],[279,279]]],[1515259967040,["Administrator@Feng",[[1,1039,"```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n\n## 多位数组"]],[1038,1038],[1191,1191]]],[1515259967836,["Administrator@Feng",[[1,1195,"\n"]],[1191,1191],[1192,1192]]],[1515259977318,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,857,"\t"],[-1,1030,"\t"],[1,1031,"\n"],[-1,1184,"\n"],[1,1192,"\n"]],[279,279],[1193,1193]]],[1515259977318,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,856,"\t"],[1,1030,"\t"],[-1,1030,"\n"],[1,1184,"\n"],[-1,1191,"\n"]],[1193,1193],[279,279]]],[1515259970562,["Administrator@Feng",[[-1,1188,"位"],[1,1189,"w"]],[1188,1189],[1188,1189]]],[1515259970705,["Administrator@Feng",[[1,1189,"e"]],[1188,1189],[1188,1190]]],[1515259971784,["Administrator@Feng",[[1,1190,"i"]],[1188,1190],[1188,1191]]],[1515259973047,["Administrator@Feng",[[-1,1190,"i"]],[1188,1191],[1188,1190]]],[1515259973692,["Administrator@Feng",[[-1,1187,"多ew"]],[1188,1190],[1187,1187]]],[1515259976615,["Administrator@Feng",[[1,1187,"多维"]],[1187,1187],[1189,1189]]],[1515260457344,[null,[[-1,279,"\n"],[1,285,":"],[-1,504,":"],[1,505,"\n"],[-1,856,"\n"],[1,857,"\t"],[-1,1030,"\t"],[1,1031,"\n"],[-1,1184,"\n"],[1,1187," "],[-1,1189,"位"],[1,1192,"\n"]],[279,279],[1193,1193]]],[1515260457344,[null,[[1,279,"\n"],[-1,284,":"],[1,504,":"],[-1,504,"\n"],[1,856,"\n"],[-1,856,"\t"],[1,1030,"\t"],[-1,1030,"\n"],[1,1184,"\n"],[-1,1186," "],[1,1189,"位"],[-1,1191,"\n"]],[1193,1193],[279,279]]],[1515260442218,["Administrator@Feng",[[1,1192,"```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n\n"]],[1191,1191],[1395,1395]]]]],["e45fb91b-a9d6-41e8-9a93-cec26c14ed35",1515339308814,"Php(五)---数组\n===\n## 数组的类型\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n\n\n\n\n\n",[[1515339302223,["Administrator@Feng",[[1,1400,"\n"]],[1395,1395],[1396,1396]]],[1515339302448,["Administrator@Feng",[[1,1396,"33"]],[1396,1396],[1398,1398]]],[1515339303537,["Administrator@Feng",[[-1,1396,"33"]],[1398,1398],[1396,1396]]],[1515339303866,["Administrator@Feng",[[-1,1400,"\n"]],[1396,1396],[1395,1395]]],[1515339307298,["Administrator@Feng",[[1,1395,"## jia"]],[1395,1395],[1401,1401]]],[1515339308145,["Administrator@Feng",[[-1,1398,"jia"]],[1401,1401],[1398,1398]]],[1515339319220,["Administrator@Feng",[[1,1398,"检查数组中是否存在某个值"]],[1398,1398],[1410,1410]]],[1515339319962,["Administrator@Feng",[[1,1415,"\n"]],[1410,1410],[1411,1411]]],[1515339347498,["Administrator@Feng",[[1,1411,"bool inn"]],[1411,1411],[1419,1419]]],[1515339348416,["Administrator@Feng",[[-1,1418,"n"]],[1419,1419],[1418,1418]]],[1515339352042,["Administrator@Feng",[[1,1418,"_array()"]],[1418,1418],[1426,1426]]],[1515339355500,["Administrator@Feng",[[1,1425,"miexed "]],[1425,1425],[1432,1432]]],[1515339357185,["Administrator@Feng",[[-1,1427,"exed "]],[1432,1432],[1427,1427]]],[1515339361793,["Administrator@Feng",[[1,1427,"xed $neel"]],[1427,1427],[1436,1436]]],[1515339362392,["Administrator@Feng",[[-1,1435,"l"]],[1436,1436],[1435,1435]]],[1515339371738,["Administrator@Feng",[[1,1435,"dle , array $haystack []"]],[1435,1435],[1459,1459]]],[1515339379899,["Administrator@Feng",[[1,1458,",bool $strict = F"]],[1458,1458],[1475,1475]]],[1515339380529,["Administrator@Feng",[[1,1475,"L"]],[1475,1475],[1476,1476]]],[1515339380984,["Administrator@Feng",[[-1,1475,"L"]],[1476,1476],[1475,1475]]],[1515339381553,["Administrator@Feng",[[1,1475,"ak"]],[1475,1475],[1477,1477]]],[1515339382168,["Administrator@Feng",[[-1,1475,"ak"]],[1477,1477],[1475,1475]]],[1515339383043,["Administrator@Feng",[[1,1475,"ALSE"]],[1475,1475],[1479,1479]]],[1515339385778,["Administrator@Feng",[[1,1486,"\n"]],[1481,1481],[1482,1482]]],[1515339426578,["Administrator@Feng",[[1,1482,"sta"]],[1482,1482],[1485,1485]]],[1515339427360,["Administrator@Feng",[[-1,1484,"a"]],[1485,1485],[1484,1484]]],[1515339428713,["Administrator@Feng",[[1,1484,"rict "]],[1484,1484],[1489,1489]]],[1515339432928,["Administrator@Feng",[[-1,1482,"strict "]],[1489,1489],[1482,1482]]],[1515339434963,["Administrator@Feng",[[1,1482,"shou"]],[1482,1482],[1486,1486]]],[1515339435776,["Administrator@Feng",[[-1,1482,"shou"]],[1486,1486],[1482,1482]]],[1515339436683,["Administrator@Feng",[[1,1482,"sho"]],[1482,1482],[1485,1485]]],[1515339437320,["Administrator@Feng",[[-1,1482,"sho"]],[1485,1485],[1482,1482]]],[1515339439011,["Administrator@Feng",[[1,1482,"寿命"]],[1482,1482],[1484,1484]]],[1515339439634,["Administrator@Feng",[[-1,1482,"寿命"]],[1484,1484],[1482,1482]]],[1515339445755,["Administrator@Feng",[[1,1482,"说明: 如果"]],[1482,1482],[1488,1488]]],[1515339476770,["Administrator@Feng",[[1,1488,"没有设置strict,就使用宽松的比较.如果设为true,就会"]],[1488,1488],[1519,1519]]],[1515339479585,["Administrator@Feng",[[-1,1518,"会"]],[1519,1519],[1518,1518]]],[1515339483501,["Administrator@Feng",[[1,1518,"还会价差"]],[1518,1518],[1522,1522]]],[1515339484120,["Administrator@Feng",[[-1,1520,"价差"]],[1522,1522],[1520,1520]]],[1515339489301,["Administrator@Feng",[[1,1520,"检查类型手否"]],[1520,1520],[1526,1526]]],[1515339490072,["Administrator@Feng",[[-1,1524,"手否"]],[1526,1526],[1524,1524]]],[1515339495442,["Administrator@Feng",[[1,1524,"是否相同."]],[1524,1524],[1529,1529]]],[1515339496400,["Administrator@Feng",[[1,1534,"\n"]],[1529,1529],[1530,1530]]],[1515339506170,["Administrator@Feng",[[1,1530,"注意: in_array()"]],[1530,1530],[1544,1544]]],[1515339513140,["Administrator@Feng",[[1,1544,"函数只能在当前的"]],[1544,1544],[1552,1552]]],[1515339513833,["Administrator@Feng",[[-1,1551,"的"]],[1552,1552],[1551,1551]]],[1515339519203,["Administrator@Feng",[[1,1551,"维度上"]],[1551,1551],[1554,1554]]],[1515339520872,["Administrator@Feng",[[-1,1553,"上"]],[1554,1554],[1553,1553]]],[1515339531233,["Administrator@Feng",[[1,1553,"数组中检查是否存在某个元素."]],[1553,1553],[1567,1567]]],[1515339531816,["Administrator@Feng",[[1,1572,"\n"]],[1567,1567],[1568,1568]]],[1515339532408,["Administrator@Feng",[[-1,1572,"\n"]],[1568,1568],[1567,1567]]],[1515339681263,["Administrator@Feng",[[1,1568,"```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\n\t输出结果:bool(false)\r\nbool(true)"]],[1567,1567],[1883,1883]]],[1515339690570,[null,[[-1,1854,"\n"],[-1,1872,"\r"],[1,1873,"\n"],[1,1884,"\n"]],[1854,1854],[1885,1885]]],[1515339690571,[null,[[1,1854,"\n"],[1,1871,"\r"],[-1,1871,"\n"],[-1,1883,"\n"]],[1885,1885],[1854,1854]]],[1515339688912,["Administrator@Feng",[[-1,1871,"\r"],[1,1873,"\t\t\t"]],[1872,1872],[1875,1875]]],[1515339690081,["Administrator@Feng",[[-1,1874,"\t"]],[1875,1875],[1874,1874]]],[1515339716794,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"]],[1854,1854],[1886,1886]]],[1515339716794,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"]],[1886,1886],[1854,1854]]],[1515339713284,["Administrator@Feng",[[1,1885,"## 数组转换为字符串"]],[1885,1885],[1896,1896]]],[1515339715916,["Administrator@Feng",[[1,1900,"\n"]],[1896,1896],[1897,1897]]],[1515339744909,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"]],[1854,1854],[1886,1886]]],[1515339744909,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"]],[1886,1886],[1854,1854]]],[1515339725947,["Administrator@Feng",[[1,1897,"string implode()"]],[1897,1897],[1913,1913]]],[1515339739761,["Administrator@Feng",[[1,1912,"string $glue , array $po"]],[1912,1912],[1936,1936]]],[1515339740856,["Administrator@Feng",[[-1,1935,"o"]],[1936,1936],[1935,1935]]],[1515339742849,["Administrator@Feng",[[1,1935,"ieces"]],[1935,1935],[1940,1940]]],[1515339804911,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"]],[1854,1854],[1886,1886]]],[1515339804911,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"]],[1886,1886],[1854,1854]]],[1515339745945,["Administrator@Feng",[[1,1945,"\n"]],[1941,1941],[1942,1942]]],[1515339828690,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"]],[1854,1854],[1886,1886]]],[1515339828690,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"]],[1886,1886],[1854,1854]]],[1515339816096,["Administrator@Feng",[[1,1946,"\n"]],[1941,1941],[1942,1942]]],[1515339820250,["Administrator@Feng",[[1,1942,"glue:f"]],[1942,1942],[1948,1948]]],[1515339820544,["Administrator@Feng",[[-1,1947,"f"]],[1948,1948],[1947,1947]]],[1515339823243,["Administrator@Feng",[[1,1947,"分隔符"]],[1947,1947],[1950,1950]]],[1515339824465,["Administrator@Feng",[[-1,1947,"分隔符"]],[1950,1950],[1947,1947]]],[1515339826526,["Administrator@Feng",[[1,1947,"分割符"]],[1947,1947],[1950,1950]]],[1515339855037,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"]],[1854,1854],[1886,1886]]],[1515339855037,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"]],[1886,1886],[1854,1854]]],[1515339830322,["Administrator@Feng",[[1,1955,"\n"]],[1950,1950],[1951,1951]]],[1515339854048,["Administrator@Feng",[[1,1951,"```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\n\t输出结果:red-green-blue"]],[1950,1950],[2055,2055]]],[1515339915038,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"],[-1,2035,"\n"],[1,2056,"\n"]],[1854,1854],[2057,2057]]],[1515339915038,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"],[1,2035,"\n"],[-1,2055,"\n"]],[2057,2057],[1854,1854]]],[1515339856288,["Administrator@Feng",[[1,2061,"\n"]],[2055,2055],[2056,2056]]],[1515340893156,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"],[-1,2035,"\n"],[1,2056,"\n"]],[1854,1854],[2057,2057]]],[1515340893156,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"],[1,2035,"\n"],[-1,2055,"\n"]],[2057,2057],[1854,1854]]],[1515340881384,["Administrator@Feng",[[1,2056,"$#"]],[2056,2056],[2058,2058]]],[1515340881957,["Administrator@Feng",[[-1,2056,"$#"]],[2058,2058],[2056,2056]]],[1515340891904,["Administrator@Feng",[[1,2056,"## 计算数组中的三元数目"]],[2056,2056],[2069,2069]]],[1515340897512,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"],[-1,2035,"\n"],[1,2056,"\n"]],[1854,1854],[2057,2057]]],[1515340897512,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"],[1,2035,"\n"],[-1,2055,"\n"]],[2057,2057],[1854,1854]]],[1515340894893,["Administrator@Feng",[[-1,2065,"三元"]],[2067,2067],[2065,2065]]],[1515340896905,["Administrator@Feng",[[1,2065,"单元"]],[2065,2065],[2067,2067]]],[1515340957514,[null,[[-1,1854,"\n"],[-1,1871,"\r"],[1,1872,")\n"],[-1,1874,"\n"],[1,1885,"\n"],[-1,2035,"\n"],[1,2056,"\n"]],[1854,1854],[2057,2057]]],[1515340957514,[null,[[1,1854,"\n"],[1,1870,"\r"],[-1,1870,")\n"],[1,1874,"\n"],[-1,1884,"\n"],[1,2035,"\n"],[-1,2055,"\n"]],[2057,2057],[1854,1854]]],[1515340898653,["Administrator@Feng",[[1,2075,"\n"]],[2069,2069],[2070,2070]]],[1515340904072,["Administrator@Feng",[[1,2070,"int count()"]],[2070,2070],[2081,2081]]],[1515340916078,["Administrator@Feng",[[1,2080,"mixed $var []"]],[2080,2080],[2093,2093]]],[1515340920734,["Administrator@Feng",[[1,2092,",4"]],[2092,2092],[2094,2094]]],[1515340921197,["Administrator@Feng",[[-1,2093,"4"]],[2094,2094],[2093,2093]]],[1515340923375,["Administrator@Feng",[[1,2093,"int $moc"]],[2093,2093],[2101,2101]]],[1515340923957,["Administrator@Feng",[[-1,2100,"c"]],[2101,2101],[2100,2100]]],[1515340931679,["Administrator@Feng",[[1,2100,"de = COUNT_NO"]],[2100,2100],[2113,2113]]],[1515340933696,["Administrator@Feng",[[-1,2112,"O"]],[2113,2113],[2112,2112]]],[1515340935248,["Administrator@Feng",[[1,2112,"OR"]],[2112,2112],[2114,2114]]],[1515340937246,["Administrator@Feng",[[-1,2111,"NOR"]],[2114,2114],[2111,2111]]],[1515340944207,["Administrator@Feng",[[1,2111,"NORMAL"]],[2111,2111],[2117,2117]]],[1515340946895,["Administrator@Feng",[[1,2125,"\n"]],[2119,2119],[2120,2120]]]]],["91e480b8-45f0-4341-bd03-daccc6cda316",1515412215245,"Php(五)---数组\n===\n## 数组的类型\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n## 检查数组中是否存在某个值\nbool in_array(mixed $needle , array $haystack [,bool $strict = FALSE])\n说明: 如果没有设置strict,就使用宽松的比较.如果设为true,就还会检查类型是否相同.\n注意: in_array()函数只能在当前维度数组中检查是否存在某个元素.\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\t输出结果:bool(false)\n\t\tbool(true)\n## 数组转换为字符串\nstring implode(string $glue , array $pieces)\nglue:分割符\n```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\t输出结果:red-green-blue\n## 计算数组中的单元数目\nint count(mixed $var [,int $mode = COUNT_NORMAL])\n\n\n\n\n\n\n",[[1515412204135,["Administrator@Feng",[[1,2121,"$$$$"]],[2121,2121],[2125,2125]]],[1515412209102,["Administrator@Feng",[[1,2123,"m =E"]],[2123,2123],[2127,2127]]],[1515412210677,["Administrator@Feng",[[-1,2123,"m =E"]],[2127,2127],[2123,2123]]],[1515412214714,["Administrator@Feng",[[1,2123,"E=m^2"]],[2123,2123],[2128,2128]]],[1515412217039,["Administrator@Feng",[[1,2123," "]],[2123,2123],[2124,2124]]],[1515412218174,["Administrator@Feng",[[1,2129," "]],[2129,2129],[2130,2130]]],[1515412220655,["Administrator@Feng",[[1,2131," "]],[2131,2131],[2132,2132]]],[1515412222317,["Administrator@Feng",[[-1,2131," "]],[2132,2132],[2131,2131]]],[1515412271649,["Administrator@Feng",[[1,2133,"$$\nE = mc^2\n$$\n\n"]],[2132,2132],[2148,2148]]],[1515412312108,["Administrator@Feng",[[-1,2133,"$$\nE = mc^2\n$$\n"]],[2132,2147],[2132,2132]]],[1515412315975,["Administrator@Feng",[[1,2132,"m^"]],[2132,2132],[2134,2134]]],[1515412316940,["Administrator@Feng",[[-1,2132,"m^"]],[2134,2134],[2132,2132]]],[1515412317213,["Administrator@Feng",[[1,2138,"\n"]],[2132,2132],[2133,2133]]],[1515412319701,["Administrator@Feng",[[1,2133,"m^2"]],[2133,2133],[2136,2136]]],[1515412315975,["Administrator@Feng",[[1,2132,"m^"]],[2132,2132],[2134,2134]]],[1515412316940,["Administrator@Feng",[[-1,2132,"m^"]],[2134,2134],[2132,2132]]],[1515412317213,["Administrator@Feng",[[1,2138,"\n"]],[2132,2132],[2133,2133]]],[1515412319701,["Administrator@Feng",[[1,2133,"m^2"]],[2133,2133],[2136,2136]]]]],["7afd43a6-fa2d-4c27-ba6e-550ac95a6905",1515412353628,"Php(五)---数组\n===\n## 数组的类型\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n## 检查数组中是否存在某个值\nbool in_array(mixed $needle , array $haystack [,bool $strict = FALSE])\n说明: 如果没有设置strict,就使用宽松的比较.如果设为true,就还会检查类型是否相同.\n注意: in_array()函数只能在当前维度数组中检查是否存在某个元素.\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\t输出结果:bool(false)\n\t\tbool(true)\n## 数组转换为字符串\nstring implode(string $glue , array $pieces)\nglue:分割符\n```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\t输出结果:red-green-blue\n## 计算数组中的单元数目\nint count(mixed $var [,int $mode = COUNT_NORMAL])\n\n$$ E=m^2 $$\nm^2\n\n\n\n\n\n",[[1515412351109,["Administrator@Feng",[[1,2133,"$$"]],[2133,2133],[2135,2135]]],[1515412352782,["Administrator@Feng",[[1,2138,"$$"]],[2138,2138],[2140,2140]]],[1515412364133,["Administrator@Feng",[[1,2121,"asfasdf"]],[2121,2121],[2128,2128]]],[1515412392004,["Administrator@Feng",[[-1,2121,"asfasdf$$ E=m^2 $$\n$$m^2$$"]],[2121,2147],[2121,2121]]],[1515412392692,["Administrator@Feng",[[-1,2126,"\n"]],[2121,2121],[2120,2120]]],[1515412423942,["Administrator@Feng",[[1,2121,"$$"]],[2121,2121],[2123,2123]]],[1515412427716,["Administrator@Feng",[[1,2122,"m^2"]],[2122,2122],[2125,2125]]],[1515412435669,["Administrator@Feng",[[1,2127,"a"]],[2127,2127],[2128,2128]]],[1515412436862,["Administrator@Feng",[[1,2121,"asdfasd"]],[2121,2121],[2128,2128]]],[1515412443852,["Administrator@Feng",[[-1,2121,"asdfasd$m^2$\na"]],[2121,2135],[2121,2121]]],[1515412444325,["Administrator@Feng",[[-1,2124,"\n"]],[2121,2121],[2120,2120]]],[1515412488428,["Administrator@Feng",[[1,2056,"\n"]],[2055,2055],[2056,2056]]],[1515412490560,["Administrator@Feng",[[1,2056,"---"]],[2056,2056],[2059,2059]]],[1515412498511,["Administrator@Feng",[[-1,2056,"---"]],[2056,2059],[2056,2056]]],[1515412499419,["Administrator@Feng",[[-1,2056,"\n"]],[2056,2056],[2055,2055]]]]],["3568e8a1-8551-42ea-85a3-c9a9fa7fca89",1515413701890,"Php(五)---数组\n===\n## 数组的类型\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n## 检查数组中是否存在某个值\nbool in_array(mixed $needle , array $haystack [,bool $strict = FALSE])\n说明: 如果没有设置strict,就使用宽松的比较.如果设为true,就还会检查类型是否相同.\n注意: in_array()函数只能在当前维度数组中检查是否存在某个元素.\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\t输出结果:bool(false)\n\t\tbool(true)\n## 数组转换为字符串\nstring implode(string $glue , array $pieces)\nglue:分割符\n```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\t输出结果:red-green-blue\n## 计算数组中的单元数目\nint count(mixed $var [,int $mode = COUNT_NORMAL])\n\n\n\n\n",[[1515413695245,["Administrator@Feng",[[1,24,"{}"]],[24,24],[26,26]]],[1515413696554,["Administrator@Feng",[[1,24," "]],[24,24],[25,25]]],[1515413701114,["Administrator@Feng",[[1,26,"#index"]],[26,26],[32,32]]],[1515413707787,["Administrator@Feng",[[1,27," "]],[27,27],[28,28]]],[1515413709948,["Administrator@Feng",[[-1,27," "]],[28,28],[27,27]]],[1515413716242,["Administrator@Feng",[[-1,24," "]],[25,25],[24,24]]],[1515413727436,["Administrator@Feng",[[1,2129,"[]"]],[2129,2129],[2131,2131]]],[1515413728562,["Administrator@Feng",[[1,2130,"adf"]],[2130,2130],[2133,2133]]],[1515413730081,["Administrator@Feng",[[-1,2130,"adf"]],[2133,2133],[2130,2130]]],[1515413731770,["Administrator@Feng",[[1,2130,"go"]],[2130,2130],[2132,2132]]],[1515413733972,["Administrator@Feng",[[1,2133,"()"]],[2133,2133],[2135,2135]]],[1515413739539,["Administrator@Feng",[[1,2134,"#index"]],[2134,2134],[2140,2140]]],[1515414106368,["Administrator@Feng",[[1,2144,"\n"]],[2141,2141],[2142,2142]]],[1515414107108,["Administrator@Feng",[[1,2142,"1.  `flow`\n2.  `st=>start:  Start:>https://www.zybuluo.com`\n3.  `io=>inputoutput: verification`\n4.  `op=>operation:  Your  Operation`\n5.  `cond=>condition:  Yes  or  No?`\n6.  `sub=>subroutine:  Your  Subroutine`\n7.  `e=>end`\n\n9.  `st->io->op->cond`\n10.  `cond(yes)->e`\n11.  `cond(no)->sub->io`"]],[2142,2142],[2435,2435]]],[1515414118408,["Administrator@Feng",[[-1,2142,"1. "]],[2145,2145],[2142,2142]]],[1515414119586,["Administrator@Feng",[[-1,2150,"2. "]],[2150,2153],[2150,2150]]],[1515414121376,["Administrator@Feng",[[-1,2196,"3. "]],[2196,2199],[2196,2196]]],[1515414122648,["Administrator@Feng",[[-1,2143,"`"]],[2144,2144],[2143,2143]]],[1515414123248,["Administrator@Feng",[[-1,2147,"`"]],[2148,2148],[2147,2147]]],[1515414126120,["Administrator@Feng",[[-1,2149,"`"]],[2150,2150],[2149,2149]]],[1515414127393,["Administrator@Feng",[[-1,2191,"`"]],[2192,2192],[2191,2191]]],[1515414128176,["Administrator@Feng",[[-1,2223,"`"]],[2224,2224],[2223,2223]]],[1515414129377,["Administrator@Feng",[[-1,2193,"`"]],[2194,2194],[2193,2193]]],[1515414130456,["Administrator@Feng",[[-1,2259,"`"]],[2260,2260],[2259,2259]]],[1515414132560,["Administrator@Feng",[[-1,2223,"4.  `"]],[2223,2228],[2223,2223]]],[1515414137698,["Administrator@Feng",[[-1,2290,"`"]],[2290,2291],[2290,2290]]],[1515414139729,["Administrator@Feng",[[-1,2255,"5.  `"]],[2255,2260],[2255,2255]]],[1515414141160,["Administrator@Feng",[[-1,2286,"6.  `"]],[2286,2291],[2286,2286]]],[1515414142112,["Administrator@Feng",[[-1,2320,"`"]],[2321,2321],[2320,2320]]],[1515414143700,["Administrator@Feng",[[-1,2321,"7.  "]],[2321,2325],[2321,2321]]],[1515414144448,["Administrator@Feng",[[-1,2328,"`"]],[2329,2329],[2328,2328]]],[1515414145649,["Administrator@Feng",[[-1,2321,"`"]],[2322,2322],[2321,2321]]],[1515414147192,["Administrator@Feng",[[-1,2329,"9.  `"]],[2329,2334],[2329,2329]]],[1515414148312,["Administrator@Feng",[[-1,2345,"`"]],[2346,2346],[2345,2345]]],[1515414150393,["Administrator@Feng",[[-1,2346,"10.  `"]],[2346,2352],[2346,2346]]],[1515414151073,["Administrator@Feng",[[-1,2358,"`"]],[2359,2359],[2358,2358]]],[1515414152897,["Administrator@Feng",[[-1,2359,"11.  `"]],[2359,2365],[2359,2359]]],[1515414153840,["Administrator@Feng",[[-1,2376,"`"]],[2377,2377],[2376,2376]]]]],["88406bea-371f-4b4a-b7a4-f66df0ae0083",1515416182943,"Php(五)---数组\n===\n## 数组的类型{#index}\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n## 检查数组中是否存在某个值\nbool in_array(mixed $needle , array $haystack [,bool $strict = FALSE])\n说明: 如果没有设置strict,就使用宽松的比较.如果设为true,就还会检查类型是否相同.\n注意: in_array()函数只能在当前维度数组中检查是否存在某个元素.\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\t输出结果:bool(false)\n\t\tbool(true)\n## 数组转换为字符串\nstring implode(string $glue , array $pieces)\nglue:分割符\n```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\t输出结果:red-green-blue\n## 计算数组中的单元数目\nint count(mixed $var [,int $mode = COUNT_NORMAL])\n\n[go](#index)\n flow\n st=>start:  Start:>https://www.zybuluo.com\n io=>inputoutput: verification\nop=>operation:  Your  Operation\ncond=>condition:  Yes  or  No?\nsub=>subroutine:  Your  Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n\n\n",[[1515416145220,["Administrator@Feng",[[1,2129,"\n"]],[2128,2128],[2129,2129]]],[1515416146814,["Administrator@Feng",[[1,2129,"$$"]],[2129,2129],[2131,2131]]],[1515416148869,["Administrator@Feng",[[1,2130,"  "]],[2130,2130],[2132,2132]]],[1515416150708,["Administrator@Feng",[[-1,2130,"  "]],[2132,2132],[2130,2130]]],[1515416151791,["Administrator@Feng",[[1,2130,"f"]],[2130,2130],[2131,2131]]],[1515416153163,["Administrator@Feng",[[-1,2130,"f"]],[2131,2131],[2130,2130]]],[1515416181413,["Administrator@Feng",[[1,2130,"\\int^2_0xds"]],[2130,2130],[2141,2141]]],[1515416181972,["Administrator@Feng",[[-1,2140,"s"]],[2141,2141],[2140,2140]]],[1515416182109,["Administrator@Feng",[[1,2140,"x"]],[2140,2140],[2141,2141]]],[1515416192692,["Administrator@Feng",[[-1,2129,"$\\int^2_0xdx$"]],[2129,2142],[2129,2129]]],[1515416425129,["Administrator@Feng",[[1,2129,"知识库（Wiki）生成引"]],[2129,2129],[2141,2141]]],[1515416427644,["Administrator@Feng",[[-1,2129,"知识库（Wiki）生成引"]],[2129,2141],[2129,2129]]],[1515416428052,["Administrator@Feng",[[-1,2129,"\n"]],[2129,2129],[2128,2128]]]]],["10a005db-4101-4719-8c24-42d1ffb6765e",1515429386568,"Php(五)---数组\n===\n## 数组的类型{#index}\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n## 检查数组中是否存在某个值\nbool in_array(mixed $needle , array $haystack [,bool $strict = FALSE])\n说明: 如果没有设置strict,就使用宽松的比较.如果设为true,就还会检查类型是否相同.\n注意: in_array()函数只能在当前维度数组中检查是否存在某个元素.\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\t输出结果:bool(false)\n\t\tbool(true)\n## 数组转换为字符串\nstring implode(string $glue , array $pieces)\nglue:分割符\n```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\t输出结果:red-green-blue\n## 计算数组中的单元数目\nint count(mixed $var [,int $mode = COUNT_NORMAL])\n\n[go](#index)\n flow\n st=>start:  Start:>https://www.zybuluo.com\n io=>inputoutput: verification\nop=>operation:  Your  Operation\ncond=>condition:  Yes  or  No?\nsub=>subroutine:  Your  Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io\n\n\n",[[1515429386018,["Administrator@Feng",[[-1,2142," flow\n st=>start:  Start:>https://www.zybuluo.com\n io=>inputoutput: verification\nop=>operation:  Your  Operation\ncond=>condition:  Yes  or  No?\nsub=>subroutine:  Your  Subroutine\ne=>end\n\nst->io->op->cond\ncond(yes)->e\ncond(no)->sub->io"]],[2142,2376],[2142,2142]]],[1515429386701,["Administrator@Feng",[[1,2142,"S"]],[2142,2142],[2143,2143]]],[1515429388474,["Administrator@Feng",[[-1,2142,"S"]],[2143,2143],[2142,2142]]],[1515429389538,["Administrator@Feng",[[-1,2128,"\n"]],[2128,2128],[2127,2127]]],[1515429394075,["Administrator@Feng",[[1,2144,"\n"]],[2140,2140],[2141,2141]]],[1515429424950,["Administrator@Feng",[[1,2141,"##"]],[2141,2141],[2143,2143]]],[1515429426154,["Administrator@Feng",[[-1,2141,"##"]],[2143,2143],[2141,2141]]],[1515429675184,["Administrator@Feng",[[1,2128,"```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\necho count($person);\necho count($person,1);\n```\n\n"]],[2127,2127],[2299,2299]]],[1515429754243,["Administrator@Feng",[[1,2270,".\"\""]],[2270,2270],[2273,2273]]],[1515429754475,["Administrator@Feng",[[1,2272," "]],[2272,2272],[2273,2273]]],[1515429764309,["Administrator@Feng",[[1,2303,"\t输出结果:2 6"]],[2303,2303],[2312,2312]]],[1515429767137,["Administrator@Feng",[[1,2313,"\n"]],[2312,2312],[2313,2313]]],[1515429775285,["Administrator@Feng",[[1,2313,"## 数组和"]],[2313,2313],[2319,2319]]],[1515429776865,["Administrator@Feng",[[-1,2318,"和"]],[2319,2319],[2318,2318]]],[1515429784365,["Administrator@Feng",[[1,2318,"当前单元和数组指针"]],[2318,2318],[2327,2327]]],[1515429785505,["Administrator@Feng",[[1,2328,"\n"]],[2327,2327],[2328,2328]]],[1515430255859,["Administrator@Feng",[[1,2328,"```\n$food = [\"orange\",\"banana\",\"apple\"];\necho current($food).\" \";//指针指向当前单元\necho next($food).\" \";//指针向下移\necho prev($food).\" \";//指针向前移\necho end($food).\" \";//指针指向最后一位\necho reset($food);//重置指针,指向第一位\n```\n\n\t输出结果:"]],[2327,2327],[2534,2534]]],[1515430260892,[null,[[-1,2528,"\n"],[1,2535,"\n"]],[2528,2528],[2536,2536]]],[1515430260893,[null,[[1,2528,"\n"],[-1,2534,"\n"]],[2536,2536],[2528,2528]]],[1515430260457,["Administrator@Feng",[[1,2534,"orange banana orange apple orange"]],[2534,2534],[2567,2567]]],[1515430262244,[null,[[-1,2528,"\n"],[1,2534,":"],[-1,2567,":"],[1,2568,"\n"]],[2528,2528],[2569,2569]]],[1515430262244,[null,[[1,2528,"\n"],[-1,2533,":"],[1,2567,":"],[-1,2567,"\n"]],[2569,2569],[2528,2528]]],[1515430261929,["Administrator@Feng",[[1,2569,"\n"]],[2567,2567],[2568,2568]]]]],["e7bdbfa4-a6b3-4b0a-9a06-88c42215cd5c",1515479677620,"Php(五)---数组\n===\n## 数组的类型{#index}\nphp中有两种类型的数组,即索引数组和关联数组.索引数组键由数字组成,(默认为索引数组),关联数组由字符串和数字混合组成.\n- 关联数组\n$array1 = array(\"a\"=>\"foo\",\"b\"=>\"bar\");\n- 索引数组\n$array2 = array(1=>\"foo\",2=>\"bar\");\n```\n$a = array(\"foo1\",\"foo2\",\"foo3\");\n$b = array(\"a\",\"b\",6=>\"c\",\"d\");\nvar_dump($a);\nvar_dump($b);\n```\n\t输出结果:array(3) {\n \t [0]=>\n  \tstring(4) \"foo1\"\n \t [1]=>\n \t string(4) \"foo2\"\n\t  [2]=>\n \t string(4) \"foo3\"\n\t}\n\tarray(4) {\n \t [0]=>\n  \tstring(1) \"a\"\n  \t[1]=>\n  \tstring(1) \"b\"\n \t [6]=>\n \t string(1) \"c\"\n \t [7]=>\n  \tstring(1) \"d\"\n\t}\n## 创建数组\n除了上节所示的,还有:\n```\n$arr[\"a\"] = \"red\";\n$arr[\"b\"] = \"orange\";\nvar_dump($arr);\n$arr2 = [\"dog\",\"cat\",\"wolf\"];\nvar_dump($arr2);\n$arr3[] = \"a\";\n$arr3[] = \"b\";\nvar_dump($arr3);\n```\n还可以使用range()来建立一个指定范围单元的数组\narray range(mixed $start,mixed $limit [,number $step]);\nstep:单元之间的步进值;\n```\n$a = range(0,6,2);\n$b = range(\"a\",\"g\");\nprint_r($a);\nprint_r($b);\n```\n\t输出结果:Array\n\t(\n    [0] => 0\n    [1] => 2\n    [2] => 4\n    [3] => 6\t\n\t)\n\tArray\n\t(\n    [0] => a\n    [1] => b\n    [2] => c\n    [3] => d\n    [4] => e\n    [5] => f\n    [6] => g\n\t)\n## 二维数组\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\nprint_r($person);\n```\n## 多维数组\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nprint_r($arr);\n```\n## 检查数组中是否存在某个值\nbool in_array(mixed $needle , array $haystack [,bool $strict = FALSE])\n说明: 如果没有设置strict,就使用宽松的比较.如果设为true,就还会检查类型是否相同.\n注意: in_array()函数只能在当前维度数组中检查是否存在某个元素.\n```\n$arr = array(\"安徽\"=>array(\"宿州\"=>array(\"埇桥区\",\"灵璧县\"),\n                            \"合肥\"=>array(\"蜀山区\",\"肥东\")),\n    \"河南\"=>array(\",,\"=>array(\",,\",\",,\"),\n        \",,\"=>array(\",,\",\",,\"))\n);\nvar_dump(in_array(\"合肥\",$arr));\n$arr2 = [\"red\",\"green\",\"blue\"];\nvar_dump(in_array('green',$arr2));\n```\n\t输出结果:bool(false)\n\t\tbool(true)\n## 数组转换为字符串\nstring implode(string $glue , array $pieces)\nglue:分割符\n```\n$arr2 = [\"red\",\"green\",\"blue\"];\n$string = implode(\"-\",$arr2);\necho $string;\n```\n\t输出结果:red-green-blue\n## 计算数组中的单元数目\nint count(mixed $var [,int $mode = COUNT_NORMAL])\n```\n$person = array(\"jack\"=>array(\"age\"=>20,\"weight\"=>\"50kg\"),\n                \"Tom\"=>array(\"age\"=>19,\"weight\"=>\"45kg\")\n);\necho count($person).\" \";\necho count($person,1);\n```\n\t输出结果:2 6\n## 数组当前单元和数组指针\n```\n$food = [\"orange\",\"banana\",\"apple\"];\necho current($food).\" \";//指针指向当前单元\necho next($food).\" \";//指针向下移\necho prev($food).\" \";//指针向前移\necho end($food).\" \";//指针指向最后一位\necho reset($food);//重置指针,指向第一位\n```\n\t输出结果:orange banana orange apple orange\n\n\n[go](#index)\n\n\n\n\n",[[1515479676725,["Administrator@Feng",[[1,18,"#"]],[17,17],[18,18]]],[1515479683744,["Administrator@Feng",[[-1,18,"#"]],[18,18],[17,17]]]]]]}